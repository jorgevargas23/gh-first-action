name: First Workflow
on: workflow_dispatch
  inputs:
    GO_TO_DEV:
      description: 'Deploy/Promote to Dev?'
      required: false
      default: 'no'
    GO_TO_TEST:
      description: 'Deploy/Promote to Test?'
      required: false
      default: 'no'
    GO_TO_STAGE:
      description: 'Deploy/Promote to Stage?'
      required: false
      default: 'no'
    GO_TO_DR:
      description: 'Deploy/Promote to DR?'
      required: false
      default: 'no'
    GO_TO_PROD:
      description: 'Deploy/Promote to Prod?'
      required: false
      default: 'no'
jobs:
  deploy-dev:
    if: GO_TO_DEV == 'yes'
    runs-on: ubuntu-latest
    steps:
# here you would want to use AAInternal to deploy using their docker action
      - name: Build
        run: echo "building..."
        
      - name: Deploy
        run: echo "deploying to dev...done"
        
  deploy-test:
    if: GO_TO_TEST == 'yes'
    runs-on: ubuntu-latest
    steps:
# here you would want to use AAInternal to deploy using their docker action
      - name: Build
        run: echo "building..."
        
      - name: Deploy
        run: echo "deploying to test...done"
  
  deploy-stage:
    if: GO_TO_STAGE == 'yes'
    runs-on: ubuntu-latest
    steps:
# here you would want to use AAInternal to deploy using their docker action
      - name: Build
        run: echo "building..."
        
      - name: Deploy
        run: echo "deploying to stage...done"
        
  deploy-dr:
    if: GO_TO_DR == 'yes'
    runs-on: ubuntu-latest
    steps:
# here you would want to use AAInternal to deploy using their docker action
      - name: Build
        run: echo "building..."
        
      - name: Deploy
        run: echo "deploying to DR...done"
        
  deploy-prod:
    if: GO_TO_PROD == 'yes'
    runs-on: ubuntu-latest
    steps:
# here you would want to use AAInternal to deploy using their docker action
      - name: Build
        run: echo "building..."
        
      - name: Deploy
        run: echo "deploying to prod...done"
